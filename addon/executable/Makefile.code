#=============================================================================
#
# This is the code-specific makefile for thermopack.
# It is called from Makefile.
#-----------------------------------------------------------------------
# STM: 2007-01-05
# KYL: 2009-03-16
#
#=============================================================================
# Set code specific directories and variables
#=============================================================================
ROOT   = .
FULLROOT = $(shell pwd)
SRC    = $(ROOT)/src
ODIR   = ./objects/$(TARGET)
BDIR   = ./bin
THERMOPACK_DIR = $(FULLROOT)/../..
INCDIR = -I$(THERMOPACK_DIR)/objects/$(TARGET)
MOD    = -module $(ODIR)
LD     = $(FC)
VPATH  = . bin/ $(SRC)


# gfortran: old: -M; new: -J (stupid incompatible change!)
ifeq ($(FC),gfortran)
	gfortran_is_bleeding := $(shell expr `gfortran --version | grep -o "[0-9]\.[0-9]\.[0-9]" | tail -1` \>= 4.3.3)
	ifeq ($(gfortran_is_bleeding),1)
    MOD = -J $(ODIR) -I $(ODIR)
  else
    MOD = -M $(ODIR) -I $(ODIR)
  endif
endif

# Operative system dependent stuff
X86=
bit64 = $(shell uname -a | grep x86_64 | wc -c)
ifneq ($(bit64),0)
	X86=64
endif
UNAME:=$(shell uname -s)$(X86)
LN_S=ln -s
ifeq ($(UNAME),WindowsNT)
  LN_S=cp
endif

# Uname -o return Msys both on MINGW32 and MINGW64
ifeq ($(shell uname -o), Msys)
  LN_S=cp
else
  LN_S=ln -s
endif

# AA: Make it so OS = MINGW32 for all versions
OSo := $(shell uname -o)
ifeq ($(OSo),Msys)
	OS=MINGW32
else
	OS := $(shell uname -s)
endif

# A more silent compilation? Set to: 'on' or 'off'.
silent_run=off

#=============================================================================
# External libraries
#=============================================================================
# Thermodynamics
SLIBS += -L$(THERMOPACK_DIR)/bin -lthermopack_$(TARGET)

ifeq ($(FC),pgf90)
  DLIBS += -lgcc_s
endif
# Lapack and Blas are needed for numerical calculation of eigenvalues.
LADIR=./lapacklib
ifeq ($(UNAME),MINGW32)
  DLIBS += -L$(LADIR)/$(UNAME) -llapack_$(LEXT) -lblas_$(LEXT)
else ifeq ($(UNAME),WindowsNT)
  DLIBS += -L$(LADIR)/$(UNAME) -llapack_$(LEXT) -lblas_$(LEXT)
else ifeq ($(shell uname -o), Msys)
# lapacklib er satt med windows-kommandoen for eksempel slik: mklink /J lapacklib ../lapack
    SLIBS += -L$(LIBTREND_DIR)/bin -ltrend_$(TARGET)
    # Assumes now that X86_64 targets on windows/Msys2.0 have openblas installed
    ifeq ($(X86),64)
      DLIBS += -lopenblas
    else
      DLIBS += -L./lapacklib -llapack -lrefblas
    endif
else
  DLIBS +=-llapack -lblas
endif
DLIBS += -ldl -lstdc++
LIBS += $(SLIBS)
LIBS += $(DLIBS)

OBJE =	\
	$(ODIR)/main.o \

#=============================================================================
# Rules to make executable:
#=============================================================================
.PHONY: run clean

run_$(TARGET): $(OBJE) Makefile Makefile.code
	$(LD) $(FFLAGS) -o$(BDIR)/run_$(TARGET) $(OBJE) $(LIBS)

run:
	@mkdir -p $(BDIR) $(ODIR)
	$(MAKE) -f Makefile.code -e libthermopack_$(TARGET)
	$(MAKE) -f Makefile.code -e run_$(TARGET)
	@rm -f run run.exe
	@if [ $(UNAME) = WindowsNT ]; then \
	  $(LN_S) $(BDIR)/run_$(TARGET).exe run.exe; \
	else if [ $(OS) = MINGW32 ]; then \
	  $(LN_S) $(BDIR)/run_$(TARGET).exe run.exe; \
	else \
	  $(LN_S) $(BDIR)/run_$(TARGET) run; \
	fi \
	fi

clean:
	rm -rf ./objects
	rm -rf $(SRC)/*.mod
	INCDIR=$(INCDIR) clean

libthermopack_$(TARGET):
	$(MAKE) -C $(THERMOPACK_DIR) $(TARGET)

#=============================================================================
# Detailed dependencies of the object files:
#=============================================================================
ifeq ($(silent_run),on)
  ifeq ($(MODE),openmpprofile)
    make_object = echo $(FC) ... $(1); \
		kinst-ompp $(FC) $(FFLAGS) $(MOD) $(INCDIR) -c -o $@ $(1);
    make_object_cpp = echo $(CC) ... $(1); \
		kinst-ompp $(CC) $(CFLAGS) -DTARGET=$(TARGET) $(INCDIR) -c -o $@ $(1); 
  else
    make_object = echo $(FC) ... $(1); \
		$(FC) $(FFLAGS) $(MOD) $(INCDIR) -c -o $@ $(1); 
    make_object_cpp = echo $(CC) ... $(1); \
		$(CC) $(CFLAGS) -DTARGET=$(TARGET) $(INCDIR) -c -o $@ $(1); 
  endif
else
  ifeq ($(MODE),openmpprofile)
  make_object = $(FC) $(FFLAGS) $(MOD) $(INCDIR) -c -o $@ $(1); \
		kinst-ompp $(FC) $(FFLAGS) $(MOD) $(INCDIR) -c -o $@ $(1);
  make_object_cpp = echo $(CC) $(CFLAGS) -DTARGET=$(TARGET) $(INCDIR) -c -o $@ $(1); \
		kinst-ompp $(CC) $(CFLAGS) -DTARGET=$(TARGET) $(INCDIR) -c -o $@ $(1); 
  else
  make_object = echo $(FC) $(FFLAGS) $(MOD) $(INCDIR) -c -o $@ $(1); \
		$(FC) $(FFLAGS) $(MOD) $(INCDIR) -c -o $@ $(1); 
  make_object_cpp = echo $(CC) $(CFLAGS) -DTARGET=$(TARGET) $(INCDIR) -c -o $@ $(1); \
		$(CC) $(CFLAGS) -DTARGET=$(TARGET) $(INCDIR) -c -o $@ $(1); 
  endif
endif


$(ODIR)/main.o: $(SRC)/main.f90 $(THERMOPACK_DIR)/bin/libthermopack_$(TARGET).a
	@$(call make_object,$(SRC)/main.f90)
